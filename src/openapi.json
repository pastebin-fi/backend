{
  "openapi": "3.0.0",
  "info": {
    "title": "Pastebin.fi API",
    "description": "Some endpoints might return more fields than are specified in this document. They are not supposed to be used by public until they are added to this document (since they are mostly for testing and can be removed at any point of time).\n\nUseful resources:\n- [Pastebin.fi API backend code](https://github.com/pastebin-fi/PowerPaste)\n- [Official frontend for pastebin.fi API](https://github.com/pastebin-fi/frontend)",
    "termsOfService": "https://pastebin.fi/about",
    "contact": {
      "email": "sysadmin@pastebin.fi"
    },
    "license": {
      "name": "AGPL-3.0",
      "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.pastebin.fi"
    }
  ],
  "tags": [
    {
      "name": "paste",
      "description": "Requests related to pastes"
    },
    {
      "name": "metrics",
      "description": "Requestes related to metrics"
    }
  ],
  "paths": {
    "/metrics": {
      "get": {
        "tags": [
          "metrics"
        ],
        "summary": "Get metrics",
        "description": "Get public metrics of the service in JSON format",
        "operationId": "getMetrics",
        "responses": {
          "200": {
            "description": "JSON object containing metrics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            }
          },
          "404": {
            "description": "No metrics available (no pastes created / database query failed)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "title": "Liitteitä ei löytynyt",
                  "message": "Emme ole vastaanottaneet vielä yhtäkään liitettä. Ole ensimmäinen!"
                }
              }
            }
          }
        }
      }
    },
    "/pastes": {
      "get": {
        "tags": [
          "paste"
        ],
        "summary": "Get list of public pastes",
        "description": "Get list of public pastes",
        "operationId": "listPastes",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string"
            },
            "description": "Search for the following text in title and paste (keep in mind that the title is weighted)"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "The number of pastes to skip before starting to collect the result set"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 0,
              "maximum": 30
            },
            "description": "The amount of pastes that are returned in the result set."
          },
          {
            "in": "query",
            "name": "sorting",
            "schema": {
              "type": "string",
              "default": "-date",
              "enum": [
                "date",
                "-date",
                "meta.views",
                "-meta.views",
                "meta.size",
                "-meta.size"
              ]
            },
            "description": "Sort the results from mongodb with the following method. Hyphen (-) in front of the value switch the sorting to descending order (normally ascending). Has to match the available values or else set to default value."
          }
        ],
        "responses": {
          "200": {
            "description": "Paste list found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasteList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "paste"
        ],
        "requestBody": {
          "description": "Optional description in *Markdown*",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": null
      }
    },
    "/pastes/{id}": {
      "get": {
        "tags": [
          "paste"
        ],
        "summary": "Get paste",
        "description": "Get paste and its metadata (views & size)",
        "operationId": "getPaste",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The paste ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Paste found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paste"
                }
              }
            }
          },
          "404": {
            "description": "Paste not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "title": "Liitettä ei löytynyt",
                  "message": "Olemme pahoillamme, mutta hakemaasi liitettä ei löytynyt"
                }
              }
            }
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PasteList": {
        "required": [
          "views",
          "size"
        ],
        "type": "object",
        "properties": {
          "votes": {
            "type": "integer",
            "example": 0
          },
          "favs": {
            "type": "integer",
            "example": 0
          },
          "views": {
            "type": "integer",
            "example": 1
          },
          "size": {
            "type": "integer",
            "example": 109
          }
        }
      },
      "Paste": {
        "required": [
          "meta",
          "title",
          "id",
          "hidden",
          "date"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PasteMeta"
            }
          },
          "title": {
            "type": "string",
            "example": "Example title"
          },
          "id": {
            "type": "string",
            "example": "58hMQlk"
          },
          "hidden": {
            "type": "boolean",
            "example": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2023-05-03T11:19:20.137Z"
          }
        }
      },
      "PasteMeta": {
        "required": [
          "views",
          "size"
        ],
        "type": "object",
        "properties": {
          "votes": {
            "type": "integer",
            "example": 0
          },
          "favs": {
            "type": "integer",
            "example": 0
          },
          "views": {
            "type": "integer",
            "example": 1
          },
          "size": {
            "type": "integer",
            "example": 109
          }
        }
      },
      "ErrorResponse": {
        "required": [
          "title",
          "message"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "error type",
            "description": "Error type"
          },
          "message": {
            "type": "string",
            "example": "",
            "description": "More specific data of the error"
          },
          "data": {
            "type": "object",
            "description": "In some cases additional fields are given in the error response",
            "properties": {
              "pasteIdentifier": {
                "type": "string",
                "description": "existing paste ID"
              }
            }
          }
        }
      },
      "MetricsResponse": {
        "required": [
          "totalViews",
          "pasteCount - total - public - private"
        ],
        "type": "object",
        "properties": {
          "totalviews": {
            "type": "integer",
            "example": 138953,
            "description": "Sum of all paste views"
          },
          "pasteCount": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "description": "Amount of all pastes (both public and private)",
                "example": 1557
              },
              "public": {
                "type": "integer",
                "description": "Amount of public pastes",
                "example": 1129
              },
              "private": {
                "type": "integer",
                "description": "Amount of private pastes",
                "example": 428
              }
            }
          }
        }
      }
    }
  }
}